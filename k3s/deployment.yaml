#
# kubectl apply -k .
#
# The Images are  about 200M [2].  The php-fpm image  does not seem to
# bring a proxy and  does not speak http on its  port 9000. The Apache
# image ist called "legacy" OTOH. It does serve content though.
#
# It is unclear if it makes any sense to put that into a volume.  What
# of that ist supposed to be persistent state?
#
#   Each  i-doit  container  has  one default  volume  containing  the
#   complete  installation  directory: /var/www/html.  This  directory
#   includes the  source code, cache files,  uploaded files, installed
#   add-ons, custom translation files, etc.
#
# [1] https://github.com/bheisig/i-doit-docker
# [2] https://hub.docker.com/r/bheisig/idoit
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: idoit-server
spec:
  replicas: 1
  selector:
    matchLabels:
      component: idoit-server
  template:
    metadata:
      labels:
        component: idoit-server
    spec:
      # Volumes used by some or all containers of the Pod:
      volumes:
      - name: "idoit-data"
        persistentVolumeClaim:
          claimName: "idoit-data"
      containers:
      - name: idoit-server
        # docker run --name i-doit-apache -p 80:80 bheisig/idoit:1.15-open-php7.4-apache
        image: bheisig/idoit:1.15-open-php7.4-apache
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        # The simplest way to persist data between container
        # starts/upgrades is to utilize named volumes [2]:
        volumeMounts:
        - mountPath: "/unused-idoit-data"
          name: "idoit-data"
        env:
        - name: "XXX"
          value: "yyy"
---
apiVersion: v1
kind: Service
metadata:
  name: idoit-server
spec:
  type: ClusterIP
  selector:
    component: idoit-server
  ports:
  - port: 80
    targetPort: 80
---
#
# We  assume here  that  *.localhost resolves  to  the local  machine.
# Following URL should be directed to corresponding Service, also with
# https:// protocoll:
#
#     http://idoit.localhost
#
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: idoit
spec:
  rules:
  - host: idoit.localhost
    http:
      paths:
      - backend:
          serviceName: idoit-server
          servicePort: 80
---
# https://github.com/rancher/local-path-provisioner
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: idoit-data
spec:
  accessModes:
    - ReadWriteOnce
  # When you  dont specify  storage class at  all the  default storage
  # class may be chosen. In k3s with local-path provisioner it is also
  # the  default one.  Omitted  storageClassName is  not  the same  as
  # storageClassName = "".
  # storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
...
